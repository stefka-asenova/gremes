c(0,1,0,1,0,1,1),
c(0,0,0,1,0,1,0),
c(0,0,0,1,0,0,1),
c(0,0,0,1,0,1,1),
c(0,1,0,0,0,1,1),
c(0,0,0,0,0,1,1),
c(0,1/2,0,1/2,0,1/2,1/2),
c(0,1/3,0,1/2,0,1/4,1/2),
c(0,1/4,0,1/2,0,1/5,5/8),
c(0,1/5,0,1/8,0,1/4,2/3),
c(0,4/6,0,3/8,0,1/3,3/4),
c(0,3/8,0,1/2,0,2/3,1/3),
c(0,3/4,0,3/5,0,1/3,1/2))
ep1<- ep[-(12:18),]
ep_full<- rbind(
c(1,1,0,0,0,0,0),
c(1,0,1,0,0,0,0),
c(1,0,0,1,0,0,0),
c(1,0,0,0,1,0,0),
c(1,0,0,0,0,1,0),
c(1,0,0,0,0,0,1),
c(1,1,1,0,0,0,0),
c(1,1,0,1,0,0,0),
c(1,1,0,0,1,0,0),
c(1,1,0,0,0,1,0),
c(1,1,0,0,0,0,1),
c(1,0,1,1,0,0,0),
c(1,0,1,0,1,0,0),
c(1,0,1,0,0,1,0),
c(1,0,1,0,0,0,1),
c(1,0,0,1,1,0,0),
c(1,0,0,1,0,1,0),
c(1,0,0,1,0,0,1),
c(1,0,0,0,1,1,0),
c(1,0,0,0,1,0,1),
c(1,0,0,0,0,1,1),
c(0,1,1,0,0,0,0),
c(0,1,0,1,0,0,0),
c(0,1,0,0,1,0,0),
c(0,1,0,0,0,1,0),
c(0,1,0,0,0,0,1),
c(0,1,1,1,0,0,0),
c(0,1,1,0,1,0,0),
c(0,1,1,0,0,1,0),
c(0,1,1,0,0,0,1),
c(0,1,0,1,1,0,0),
c(0,1,0,1,0,1,0),
c(0,1,0,1,0,0,1),
c(0,1,0,0,1,1,0),
c(0,1,0,0,1,0,1),
c(0,1,0,0,0,1,1),
c(0,0,1,1,0,0,0),
c(0,0,1,0,1,0,0),
c(0,0,1,0,0,1,0),
c(0,0,1,0,0,0,1),
c(0,0,1,1,1,0,0),
c(0,0,1,1,0,1,0),
c(0,0,1,1,0,0,1),
c(0,0,1,0,1,1,0),
c(0,0,1,0,1,0,1),
c(0,0,1,0,0,1,1),
c(0,0,0,1,1,0,0),
c(0,0,0,1,0,1,0),
c(0,0,0,1,0,0,1),
c(0,0,0,1,1,1,0),
c(0,0,0,1,1,0,1),
c(0,0,0,1,0,1,1),
c(0,0,0,0,1,1,0),
c(0,0,0,0,1,0,1),
c(0,0,0,0,1,1,1),
c(0,1/2,0,1/2,0,1/2,1/2),
c(0,1/3,0,1/2,0,1/4,1/2),
c(0,1/4,0,1/2,0,1/5,5/8),
c(0,1/5,0,1/8,0,1/4,2/3),
c(0,4/6,0,3/8,0,1/3,3/4),
c(0,3/8,0,1/2,0,2/3,1/3),
c(0,3/4,0,3/5,0,1/3,1/2))
ep1_full<- ep_full[-(56:62),]
# ep_red<- rbind(
#   c(1,1,0,0),
#   c(1,0,1,0),
#   c(1,0,0,1),
#   c(1,1,1,0),
#   c(1,1,0,1),
#   c(1,1,1,1),
#   c(0,1,1,0),
#   c(0,1,0,1),
#   c(0,1,1,1),
#   c(0,0,1,1),
#   c(1/2,1/2,1/2,1/2),
#   c(1/3,1/2,1/4,1/2),
#   c(1/4,1/2,1/5,5/8),
#   c(1/5,1/8,1/4,2/3),
#   c(4/6,3/8,1/3,3/4),
#   c(3/8,1/2,2/3,1/3),
#   c(3/4,3/5,1/3,1/2))
lstdf_emp<- function(data, x, k)
{
if (is.null(dim(x)))
{
x<- t(as.matrix(x))
}
n<- nrow(data)
stopifnot(is.numeric(d <- ncol(data)),
is.matrix(x),
d == ncol(x))
tr<- n+0.5-k*x
R<- apply(data, 2, rank)
l<- n*(1-copula::F.n(tr, R))/k
return(l)
}
lstdf<- function(params, points)
{
B<- B(params)
l<- 0
for(i in 1:ncol(B))
{
l<- l + apply(apply(points, 1, function(x){return(x*B[,i])}),2,max)
}
return(l)
}
# lstdf_red<- function(params, points)
# {
#   B<- B(params)
#     l<- 0
#     for(i in 1:ncol(B))
#     {
#       l<- l + apply(apply(points, 1, function(x){return(x*B[c(2,4,6,7),i])}),2,max)
#     }
#
#  return(l)
# }
fnk<- function(param, data, x, k)
{
lhat<- lstdf_emp(data, x, k)
lparam<- lstdf(param, x)
f<- sum((lhat-lparam)^2)
return(f)
}
# fnk_red<- function(param, data, x, k)
# {
#   lhat<- lstdf_emp(data, x, k)
#   lparam<- lstdf_red(param, x)
#   f<- sum((lhat-lparam)^2)
#   return(f)
# }
#optim(rep(0.5,11), fnk, method = "L-BFGS-B", lower = rep(0,11), upper = rep(1,11), data=xx, x=ep, k=20)$par
#X<- rML(BB)
#XX<- X[,c(2,4,6,7)]
opts <- list("algorithm"= "NLOPT_LN_COBYLA",#   NLOPT_GN_ISRES",   #
"xtol_rel"=1.0e-8)
BB<- B(ew)
#X<- rML(BB)
#XX<- X[,c(2,4,6,7)]
opts <- list("algorithm"= "NLOPT_LN_COBYLA",#   NLOPT_GN_ISRES",   #
"xtol_rel"=1.0e-8)
n<- 1000
k<- c(20,50,100,150,200,300, 400, 500, 600, 700)
kk<- length(k)
cest<- array(0,dim = c(100,kk,m))
cest1<- array(0,dim = c(100,kk,m))
cest_full<- array(0,dim = c(100,kk,m))
cest1_full<- array(0,dim = c(100,kk,m))
for (j in 1:100)
{
X<- rML(BB)
for (i in 1:kk)
{
k1<- k[i]
cest[j,i, ]<- nloptr(x0 = rep(0.5,m), eval_f=fnk,
lb = rep(0,m),
ub=rep(1,m),
opts = opts,
data=X,x=ep, k=k1)$solution
cest1[j,i,]<- nloptr(x0 = rep(0.5,m), eval_f=fnk,
lb = rep(0,m),
ub=rep(1,m),
opts = opts,
data=X,x=ep1, k=k1 )$solution
cest_full[j,i,]<- nloptr(x0 = rep(0.5,m), eval_f=fnk,
lb = rep(0,m),
ub=rep(1,m),
opts = opts,
data=X,x=ep_full, k=k1 )$solution
cest1_full[j,i,]<- nloptr(x0 = rep(0.5,m), eval_f=fnk,
lb = rep(0,m),
ub=rep(1,m),
opts = opts,
data=X, x=ep1_full, k=k1 )$solution
}
}
# nloptr(x0 = rep(0.5,m), eval_f=fnk_red,
#                       lb = rep(0,m),
#                       ub=rep(1,m),
#                       eval_g_ineq = constr,
#                       opts = opts,
#                       data=XX,x=ep_red, k=50 )$solution
#optim(rep(0.5,m), fnk, method = "L-BFGS-B", lower = rep(0,m), upper = rep(1,m),
#                        data=X, x=ep, k=50)$par
mc<- matrix(0,kk,m)
sdev<- matrix(0,kk,m)
rmse<- matrix(0,kk,m)
for (j in 1:m)
{
mc[,j]<- apply(cest[,,j], 2, mean) -ew[j]
sdev[,j]<- apply(cest[,,j], 2, var)
rmse[,j]<- sqrt(mc[,j]^2 + sdev[,j])
}
rmse0<- rmse
mc<- matrix(0,kk,m)
sdev<- matrix(0,kk,m)
rmse<- matrix(0,kk,m)
for (j in 1:m)
{
mc[,j]<- apply(cest1[,,j], 2, mean) -ew[j]
sdev[,j]<- apply(cest1[,,j], 2, var)
rmse[,j]<- sqrt(mc[,j]^2 + sdev[,j])
}
rmse1<- rmse
mc<- matrix(0,kk,m)
sdev<- matrix(0,kk,m)
rmse<- matrix(0,kk,m)
for (j in 1:m)
{
mc[,j]<- apply(cest_full[,,j], 2, mean) -ew[j]
sdev[,j]<- apply(cest_full[,,j], 2, var)
rmse[,j]<- sqrt(mc[,j]^2 + sdev[,j])
}
rmse_full<- rmse
mc<- matrix(0,kk,m)
sdev<- matrix(0,kk,m)
rmse<- matrix(0,kk,m)
for (j in 1:m)
{
mc[,j]<- apply(cest1_full[,,j], 2, mean) -ew[j]
sdev[,j]<- apply(cest1_full[,,j], 2, var)
rmse[,j]<- sqrt(mc[,j]^2 + sdev[,j])
}
rmse1_full<- rmse
parC<- array(0, dim=c(kk,4, m))
for (i in 1:m)
{
parC[,,i]<-cbind(rmse0[,i], rmse1[,i], rmse_full[,i], rmse1_full[,i])
}
parC<- array(0, dim=c(kk,4, m))
for (i in 1:m)
{
parC[,,i]<-cbind(rmse0[,i], rmse1[,i], rmse_full[,i], rmse1_full[,i])
}
indice<- 1
e<-
pdf(file = paste0("C:/Users/asenova/Dropbox/2016-2017 PhD UCL/2016-2017/paper2-Lin/simul_ML_",indice,".pdf"),
width=3.80, height=3.80, pointsize = 8)
par(mar=c(4,5.3,4,1)+.1)
matplot(k,parC[,,indice],
type = "l",
lty = c(1:4),
col = c("black", "darkgreen", "cyan", "magenta"),
lwd = 2,
ylab = "rmse",
cex.lab = 1.5,
cex.axis = 1.3,
ylim= c(0, max(parC[,,indice])), main=expression('c'[12]))
abline(0,0)
legend( "topleft", c("quasi-ECE", "ECE", "all data quasi-ECE", "all data ECE"),
lty = c(1:4),
col = c("black", "darkgreen", "cyan", "magenta"),
lwd = 2,
cex = 1.2)
dev.off()
indice<- 1
e<-
pdf(file = paste0("C:/Users/asenova/Dropbox/2016-2017 PhD UCL/2016-2017/paper2-Lin/simul_sum_",indice,".pdf"),
width=3.80, height=3.80, pointsize = 8)
par(mar=c(4,5.3,4,1)+.1)
matplot(k,parC[,,indice],
type = "l",
lty = c(1:4),
col = c("black", "darkgreen", "cyan", "magenta"),
lwd = 2,
ylab = "rmse",
cex.lab = 1.5,
cex.axis = 1.3,
ylim= c(0, max(parC[,,indice])), main=expression('c'[12]))
abline(0,0)
legend( "topleft", c("quasi-ECE", "ECE", "all data quasi-ECE", "all data ECE"),
lty = c(1:4),
col = c("black", "darkgreen", "cyan", "magenta"),
lwd = 2,
cex = 1.2)
dev.off()
indice<- 2
e<-
pdf(file = paste0("C:/Users/asenova/Dropbox/2016-2017 PhD UCL/2016-2017/paper2-Lin/simul_sum_",indice,".pdf"),
width=3.80, height=3.80, pointsize = 8)
par(mar=c(4,5.3,4,1)+.1)
matplot(k,parC[,,indice],
type = "l",
lty = c(1:4),
col = c("black", "darkgreen", "cyan", "magenta"),
lwd = 2,
ylab = "rmse",
cex.lab = 1.5,
cex.axis = 1.3,
ylim= c(0, max(parC[,,indice])), main=expression('c'[13]))
abline(0,0)
legend( "topleft", c("quasi-ECE", "ECE", "all data quasi-ECE", "all data ECE"),
lty = c(1:4),
col = c("black", "darkgreen", "cyan", "magenta"),
lwd = 2,
cex = 1.2)
dev.off()
indice<- 2
e<-
pdf(file = paste0("C:/Users/asenova/Dropbox/2016-2017 PhD UCL/2016-2017/paper2-Lin/simul_sum_",indice,".pdf"),
width=3.80, height=3.80, pointsize = 8)
par(mar=c(4,5.3,4,1)+.1)
matplot(k,parC[,,indice],
type = "l",
lty = c(1:4),
col = c("black", "darkgreen", "cyan", "magenta"),
lwd = 2,
ylab = "rmse",
cex.lab = 1.5,
cex.axis = 1.3,
ylim= c(0, max(parC[,,indice])), main=expression('c'[13]))
abline(0,0)
# legend( "topleft", c("quasi-ECE", "ECE", "all data quasi-ECE", "all data ECE"),
#             lty = c(1:4),
#             col = c("black", "darkgreen", "cyan", "magenta"),
#             lwd = 2,
#         cex = 1.2)
dev.off()
indice<- 3
e<-
pdf(file = paste0("C:/Users/asenova/Dropbox/2016-2017 PhD UCL/2016-2017/paper2-Lin/simul_sum_",indice,".pdf"),
width=3.80, height=3.80, pointsize = 8)
par(mar=c(4,5.3,4,1)+.1)
matplot(k,parC[,,indice],
type = "l",
lty = c(1:4),
col = c("black", "darkgreen", "cyan", "magenta"),
lwd = 2,
ylab = "rmse",
cex.lab = 1.5,
cex.axis = 1.3,
ylim= c(0, max(parC[,,indice])), main=expression('c'[32]))
abline(0,0)
# legend( "topleft", c("quasi-ECE", "ECE", "all data quasi-ECE", "all data ECE"),
#             lty = c(1:4),
#             col = c("black", "darkgreen", "cyan", "magenta"),
#             lwd = 2,
#         cex = 1.2)
dev.off()
indice<- 4
e<-
pdf(file = paste0("C:/Users/asenova/Dropbox/2016-2017 PhD UCL/2016-2017/paper2-Lin/simul_sum_",indice,".pdf"),
width=3.80, height=3.80, pointsize = 8)
par(mar=c(4,5.3,4,1)+.1)
matplot(k,parC[,,indice],
type = "l",
lty = c(1:4),
col = c("black", "darkgreen", "cyan", "magenta"),
lwd = 2,
ylab = "rmse",
cex.lab = 1.5,
cex.axis = 1.3,
ylim= c(0, max(parC[,,indice])), main=expression('c'[34]))
abline(0,0)
# legend( "topleft", c("quasi-ECE", "ECE", "all data quasi-ECE", "all data ECE"),
#             lty = c(1:4),
#             col = c("black", "darkgreen", "cyan", "magenta"),
#             lwd = 2,
#         cex = 1.2)
dev.off()
indice<- 5
e<-
pdf(file = paste0("C:/Users/asenova/Dropbox/2016-2017 PhD UCL/2016-2017/paper2-Lin/simul_sum_",indice,".pdf"),
width=3.80, height=3.80, pointsize = 8)
par(mar=c(4,5.3,4,1)+.1)
matplot(k,parC[,,indice],
type = "l",
lty = c(1:4),
col = c("black", "darkgreen", "cyan", "magenta"),
lwd = 2,
ylab = "rmse",
cex.lab = 1.5,
cex.axis = 1.3,
ylim= c(0, max(parC[,,indice])), main=expression('c'[35]))
abline(0,0)
# legend( "topleft", c("quasi-ECE", "ECE", "all data quasi-ECE", "all data ECE"),
#             lty = c(1:4),
#             col = c("black", "darkgreen", "cyan", "magenta"),
#             lwd = 2,
#         cex = 1.2)
dev.off()
indice<- 6
e<-
pdf(file = paste0("C:/Users/asenova/Dropbox/2016-2017 PhD UCL/2016-2017/paper2-Lin/simul_sum_",indice,".pdf"),
width=3.80, height=3.80, pointsize = 8)
par(mar=c(4,5.3,4,1)+.1)
matplot(k,parC[,,indice],
type = "l",
lty = c(1:4),
col = c("black", "darkgreen", "cyan", "magenta"),
lwd = 2,
ylab = "rmse",
cex.lab = 1.5,
cex.axis = 1.3,
ylim= c(0, max(parC[,,indice])), main=expression('c'[36]))
abline(0,0)
# legend( "topleft", c("quasi-ECE", "ECE", "all data quasi-ECE", "all data ECE"),
#             lty = c(1:4),
#             col = c("black", "darkgreen", "cyan", "magenta"),
#             lwd = 2,
#         cex = 1.2)
dev.off()
indice<- 7
e<-
pdf(file = paste0("C:/Users/asenova/Dropbox/2016-2017 PhD UCL/2016-2017/paper2-Lin/simul_sum_",indice,".pdf"),
width=3.80, height=3.80, pointsize = 8)
par(mar=c(4,5.3,4,1)+.1)
matplot(k,parC[,,indice],
type = "l",
lty = c(1:4),
col = c("black", "darkgreen", "cyan", "magenta"),
lwd = 2,
ylab = "rmse",
cex.lab = 1.5,
cex.axis = 1.3,
ylim= c(0, max(parC[,,indice])), main=expression('c'[56]))
abline(0,0)
# legend( "topleft", c("quasi-ECE", "ECE", "all data quasi-ECE", "all data ECE"),
#             lty = c(1:4),
#             col = c("black", "darkgreen", "cyan", "magenta"),
#             lwd = 2,
#         cex = 1.2)
dev.off()
indice<- 7
e<-
pdf(file = paste0("C:/Users/asenova/Dropbox/2016-2017 PhD UCL/2016-2017/paper2-Lin/simul_sum_",indice,".pdf"),
width=3.80, height=3.80, pointsize = 8)
par(mar=c(4,5.3,4,1)+.1)
matplot(k,parC[,,indice],
type = "l",
lty = c(1:4),
col = c("black", "darkgreen", "cyan", "magenta"),
lwd = 2,
ylab = "rmse",
cex.lab = 1.5,
cex.axis = 1.3,
ylim= c(0, max(parC[,,indice])), main=expression('c'[56]))
abline(0,0)
legend( "topleft", c("quasi-ECE", "ECE", "all data quasi-ECE", "all data ECE"),
lty = c(1:4),
col = c("black", "darkgreen", "cyan", "magenta"),
lwd = 2,
cex = 1.2)
dev.off()
indice<- 8
e<-
pdf(file = paste0("C:/Users/asenova/Dropbox/2016-2017 PhD UCL/2016-2017/paper2-Lin/simul_sum_",indice,".pdf"),
width=3.80, height=3.80, pointsize = 8)
par(mar=c(4,5.3,4,1)+.1)
matplot(k,parC[,,indice],
type = "l",
lty = c(1:4),
col = c("black", "darkgreen", "cyan", "magenta"),
lwd = 2,
ylab = "rmse",
cex.lab = 1.5,
cex.axis = 1.3,
ylim= c(0, max(parC[,,indice])), main=expression('c'[57]))
abline(0,0)
# legend( "topleft", c("quasi-ECE", "ECE", "all data quasi-ECE", "all data ECE"),
#             lty = c(1:4),
#             col = c("black", "darkgreen", "cyan", "magenta"),
#             lwd = 2,
#         cex = 1.2)
dev.off()
save.image("C:/Users/asenova/Dropbox/2016-2017 PhD UCL/2016-2017/paper2/paper2-numerics/simulation_SUML_miss_data.RData")
devtools::check()
devtools::check()
help(Argument)
search()
Argument()
gremes::Argument()
help(estimate)
0.22*0.43
0.22*0.43*4
0.2*0.4
2*0.2*0.22
0.088+0.08+0.38
0.45*1.3
0.45*1.5
0.45*1.7
0.45*1.8
0.7*1.45
0.2*0.22*2+0.22*0.43*2+0.2*0.43*2
pdf
dev.off
rbeta
uniroot
rmev
mean
var
looknan
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
